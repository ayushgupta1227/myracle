const express = require('express');
const multer = require('multer');
const { Configuration, OpenAIApi } = require('openai');
const app = express();

// Configure multer for file uploads
const upload = multer({ dest: 'uploads/' });

const openai = new OpenAIApi(new Configuration({
  apiKey: process.env.OPENAI_API_KEY
}));

app.post('/api/generate-test-cases', upload.array('screenshots'), async (req, res) => {
  const context = req.body.context;
  const screenshots = req.files;

  try {
    // Process each screenshot and prompt the LLM
    const results = await Promise.all(screenshots.map(async (screenshot) => {
      const response = await openai.createCompletion({
        model: 'gpt-4', // assuming multimodal LLM
        prompt: `Here is a screenshot for a digital product feature. ${context ? `Context: ${context}` : ''}
        Describe a detailed test case, including description, pre-conditions, steps, and expected results.`,
        max_tokens: 1500,
      });
      return response.data.choices[0].text;
    }));

    res.json(results);
  } catch (error) {
    res.status(500).json({ error: 'Error generating test cases.' });
  }
});

app.listen(3000, () => console.log('Server running on port 3000'));
